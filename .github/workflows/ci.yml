name: CI/CD
on:
  release:
    types: [published]
jobs:
  test:
    name: Unittest
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      matrix:
        php: [8, 8.1]
        experimental: [false]
        include:
          # includes a new variable of npm with a value of 6
          # for the matrix leg matching the os and version
          - php: 8.2
            experimental: true
    services:
      mariadb:
        image: mariadb:10.6.4
        ports:
          - 3306
        env:
          MYSQL_USER: db
          MYSQL_PASSWORD: db
          MYSQL_DATABASE: db_test
          MYSQL_ROOT_PASSWORD: root
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3
    steps:
      - uses: actions/checkout@v2.4.0
      - uses: actions/setup-node@v2.5.1
        with:
          node-version: '15'
      - uses: shivammathur/setup-php@2.16.0
        with:
          php-version: ${{ matrix.php }}
          tools: composer:v2
          extensions: intl, mbstring, imap, zip, dom, pdo_mysql

      - name: Replace variables
        env:
          DB_PORT: ${{ job.services.mariadb.ports[3306] }}
        run: |
          echo "DATABASE_URL=mysql://db:db@127.0.0.1:${DB_PORT}/db?serverVersion=mariadb-10.6.4" >> .env.test.local
          
      - run: make install
        name: Build
        env:
          APP_ENV: test
      - name: Create dummy data
        run: bin/console doctrine:fixtures:load --no-interaction
        env:
          APP_ENV: test
      # Add a test script to composer.json, for instance: "test": "vendor/bin/phpunit"
      # Docs: https://getcomposer.org/doc/articles/scripts.md

      - name: Run Unittests
        run: composer run-script test
        env:
          APP_ENV: test
  build_hetzner:
    name: Build (Hetzner)
    runs-on: ubuntu-latest
    environment:
      name: hetzner
    concurrency:
      group: build-${{github.ref}}
      cancel-in-progress: true
    steps:
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - uses: actions/checkout@v2.4.0
        with:
          submodules: 'recursive'
          ssh-key: '${{ secrets.SSHKEY }}'
      - name: Set Timezone
        uses: szenius/set-timezone@v1.0
        with:
          timezoneLinux: "Europe/Berlin"
      - uses: shivammathur/setup-php@2.16.0
        with:
          php-version: 8
          tools: composer:v2
          extensions: intl, mbstring, imap, zip, dom, pdo_mysql
      - uses: actions/setup-node@v2.5.1
        with:
          node-version: '15'
      - name: Make Install
        env:
          DBPASS: ${{ secrets.DBPASS }}
          SALT: ${{ secrets.SALT }}
          EMAILPASS: ${{ secrets.EMAILPASS }}
          VERSION: ${{ steps.get_version.outputs.VERSION }}
          HT_USER: ${{ secrets.HT_USER }}
          HT_PASS: ${{ secrets.HT_PASS }}
          MS_GRAPH_TENANT: ${{ secrets.MS_GRAPH_TENANT }}
          MS_GRAPH_CLIENT_SECRET: ${{ secrets.MS_GRAPH_CLIENT_SECRET }}
          MS_GRAPH_CLIENT_ID: ${{ secrets.MS_GRAPH_CLIENT_ID }}
        run: make install_deps
      - run: make artifact.tar
      - uses: actions/upload-artifact@master
        with:
          name: deploy_hetzner
          path: artifact.tar
          retention-days: 1
  deploy_hetzner:
    name: Deploy (Hetzner)
    runs-on: ubuntu-latest
    concurrency:
      group: deploy-${{github.ref}}
      cancel-in-progress: false
    needs:
      - build_hetzner
      - test
    environment:
      name: hetzner
      url: https://hirsch.hochwarth-e.com/
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: deploy_hetzner
      - name: Unpack Files
        run: tar -xf artifact.tar
      - name: üöÆ Remove Artifact before upload
        run: rm artifact.tar
      - run: sudo apt-get install -y sshpass rsync
        name: üì¶ Installing upload dependencies
      - run: sshpass -p '${{ secrets.PASSWORD }}' rsync --exclude ".git" --exclude ".ddev" --exclude ".github" -e "ssh -o StrictHostKeyChecking=no -p 222" -rltzvOP --del --force ./ ${{ secrets.USERNAME }}@${{ secrets.HOST }}:/usr/home/${{ secrets.USERNAME }}/public_html/hirsch
        id: upload
        name: üë®‚Äçüíª Uploading files
      - run: sshpass -p '${{ secrets.PASSWORD }}' ssh -o StrictHostKeyChecking=no ${{ secrets.USERNAME }}@${{ secrets.HOST }} -p 222 -f "cd /usr/home/${{ secrets.USERNAME }}/public_html/hirsch && /usr/bin/php80 bin/console --no-interaction doctrine:migrations:migrate && /usr/bin/php80 bin/console --no-interaction cache:clear"
        id: preperations
        name: üë®‚Äçüíª Preparing system

  cleanup_artifacts:
    runs-on: ubuntu-latest
    if: always()
    needs:
      - deploy_hetzner
    steps:
      - uses: geekyeggo/delete-artifact@v1
        name: ‚ùå Remove Artifacts
        with:
          name: deploy_hetzner
