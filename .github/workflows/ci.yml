name: CI/CD
on:
  push:
    branches:
      - master
jobs:
  test:
    name: Unittest
    runs-on: ubuntu-latest
    services:
      mariadb:
        image: mariadb:latest
        ports:
          - 3306
        env:
          MYSQL_USER: hirsch
          MYSQL_PASSWORD: testing
          MYSQL_DATABASE: hirsch_test
          MYSQL_ROOT_PASSWORD: root
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3
    steps:
      - uses: actions/checkout@v2

      - uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4
          tools: composer:v2
          extensions: intl, mbstring, imap, zip, dom, pdo_mysql

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: Replace variables
        env:
          DB_PORT: ${{ job.services.mariadb.ports[3306] }}
        run: |
          sed -i "s/non_standard_port_number_replace/${DB_PORT}/" config/app_local.php


      # Add a test script to composer.json, for instance: "test": "vendor/bin/phpunit"
      # Docs: https://getcomposer.org/doc/articles/scripts.md

      - name: Run Unittests
        run: composer run-script test
  build:
    name: Build
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4
          tools: composer:v2
          extensions: intl, mbstring, imap, zip, dom, pdo_mysql
      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-interaction --no-suggest
      - uses: actions/setup-node@v2
        with:
          node-version: '15'
      - working-directory: webroot/vue-apps/bezahlen
        name: Vue - Bezahlen - AbhÃ¤ngigkeiten installieren
        run: npm ci
      - working-directory: webroot/vue-apps/bezahlen
        name: Vue - Bezahlen - Bauen
        run: npm run build
      - name: Compile CSS from SCSS files
        uses: gha-utilities/sass-build@v0.3.7
        with:
          source: webroot/scss/style.scss
          destination: webroot/css/style.css
      - name: Config anpassen
        run: |
          sed -i 's/db\_user/hirsch/' config/app_local.php
          sed -i 's/db\_pass/${{ secrets.DBPASS }}/' config/app_local.php
          sed -i 's/db\_name/hirsch/' config/app_local.php
          current_timestamp=`date +%H:%M\ %d.%m.%Y`; sed -i "s/last\_update\_timestamp/${current_timestamp}/" config/app_local.php
          sed -i 's/foodwars/${{ secrets.EMAILPASS }}/' config/app_local.php
          sed -i 's/essen@rindula\.de/essen@hochwarth-e.com/' config/app_local.php
          sed -i 's/{rindula\.de\/imap\/novalidate-cert}INBOX/{sslin.df.eu\/imap}INBOX/' config/app_local.php
      - name: Passwortschutz erstellen
        run: |
          echo '' >> webroot/.htaccess
          echo 'AuthType Basic' >> webroot/.htaccess
          echo 'AuthName "Bestellungen"' >> webroot/.htaccess
          echo 'AuthUserFile /usr/www/users/hochwa/hirsch/.htpasswd' >> webroot/.htaccess
          echo 'Require valid-user' >> webroot/.htaccess
          echo '${{ secrets.AUTHCREDENTIALS }}' > .htpasswd
  deploy_hetzner:
    name: Deploy (Hetzner)
    runs-on: ubuntu-latest
    needs:
      - build
    environment:
      name: hetzner
      url: https://hirsch.hochwarth-e.com/
    steps:
      - run: sudo apt-get install -y sshpass rsync
      - run: sshpass -p '${{ secrets.PASSWORD }}' rsync --exclude ".git" --exclude ".github" -e "ssh -o StrictHostKeyChecking=no -p 222" -rltzvOP --del --force ./ ${{ secrets.USERNAME }}@${{ secrets.HOST }}:/usr/home/${{ secrets.USERNAME }}/public_html/hirsch
        id: upload
      - run: sshpass -p '${{ secrets.PASSWORD }}' ssh -o StrictHostKeyChecking=no ${{ secrets.USERNAME }}@${{ secrets.HOST }} -p 222 -f "cd /usr/home/${{ secrets.USERNAME }}/public_html/hirsch && bin/cake migrations migrate && bin/cake cache clear_all"
        id: preperations
