name: PHP Check

on:
  pull_request:
    branches: [ master ]

jobs:
  stan:
    name: PHP Stan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: shivammathur/setup-php@2.16.0
        with:
          php-version: 8
          tools: composer:v2
          extensions: intl, mbstring, imap, zip, dom, pdo_mysql
      - name: Dependencies
        run: |
          composer install
      - name: PHP Stan Analyse
        run: phpstan analyse

  test:
    name: Unittest
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      matrix:
        php: [8]
        experimental: [false]
    services:
      mariadb:
        image: mariadb:10.6.4
        ports:
          - 3306
        env:
          MYSQL_USER: db
          MYSQL_PASSWORD: db
          MYSQL_DATABASE: db_test
          MYSQL_ROOT_PASSWORD: root
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3
    steps:
      - uses: actions/checkout@v2.4.0
      - uses: actions/setup-node@v2.5.0
        with:
          node-version: '15'
      - uses: shivammathur/setup-php@2.16.0
        with:
          php-version: ${{ matrix.php }}
          tools: composer:v2
          extensions: intl, mbstring, imap, zip, dom, pdo_mysql

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: Replace variables
        env:
          DB_PORT: ${{ job.services.mariadb.ports[3306] }}
        run: |
          echo "DATABASE_URL=mysql://db:db@127.0.0.1:${DB_PORT}/db?serverVersion=mariadb-10.6.4" >> .env.test.local
      # Create database Schema
      - name: Create database schema and dummy data
        run: |
          bin/console --env=test doctrine:schema:create --no-interaction
          bin/console --env=test doctrine:fixtures:load --no-interaction
      - run: npm ci
        name: Initialize NPM on Root
      - run: npm run build
        name: Webpack Build
      # Add a test script to composer.json, for instance: "test": "vendor/bin/phpunit"
      # Docs: https://getcomposer.org/doc/articles/scripts.md

      - name: Run Unittests
        run: composer run-script test
