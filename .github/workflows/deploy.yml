name: Build & Deploy
on:
  push:
    branches:
      - master
jobs:
  build:
    name: Build
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
      - run: /usr/bin/composer install --no-ansi --optimize-autoloader --no-interaction --no-plugins --no-progress
        name: Composer install
      - working-directory: webroot/vue-apps/bezahlen
        name: Vue Bezahlen Build
        run: |
          /usr/local/bin/npm ci
          /usr/local/bin/npm run build --if-present
      - name: Config anpassen
        run: |
          sed -i 's/db\_user/hirsch/' config/app_local.php
          sed -i 's/db\_pass/${{ secrets.DBPASS }}/' config/app_local.php
          sed -i 's/db\_name/hirsch/' config/app_local.php
          sed -i 's/foodwars/${{ secrets.EMAILPASS }}/' config/app_local.php
          sed -i 's/essen@rindula\.de/essen@hochwarth-e.com/' config/app_local.php
          sed -i 's/{rindula\.de\/imap\/novalidate-cert}INBOX/{sslin.df.eu\/imap}INBOX/' config/app_local.php
      - name: Passwortschutz erstellen
        run: |
          echo '' >> webroot/.htaccess
          echo 'AuthType Basic' >> webroot/.htaccess
          echo 'AuthName "Bestellungen"' >> webroot/.htaccess
          echo 'AuthUserFile /usr/www/users/hochwa/hirsch/.htpasswd' >> webroot/.htaccess
          echo 'Require valid-user' >> webroot/.htaccess
          echo 'hirsch:$1$fYrmJTqu$/RcIe9S9iVjc4l9KIJG1G.' > .htpasswd
  deploy:
    name: Deploy
    runs-on: self-hosted
    needs: build
    steps:
      - run: sshpass -p '${{ secrets.PASSWORD }}' rsync -e "ssh -o StrictHostKeyChecking=no -p 222" -rltzvOP --del --force ./ ${{ secrets.USERNAME }}@${{ secrets.HOST }}:/usr/home/hochwa/public_html/hirsch
        id: upload
      - run: sshpass -p '${{ secrets.PASSWORD }}' ssh -o StrictHostKeyChecking=no ${{ secrets.USERNAME }}@${{ secrets.HOST }} -p 222 -f "cd /usr/home/hochwa/public_html/hirsch && bin/cake migrations migrate && bin/cake cache clear_all"
        id: preperations
